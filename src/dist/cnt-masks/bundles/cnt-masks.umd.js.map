{"version":3,"file":"cnt-masks.umd.js","sources":["../../../projects/cnt-masks/src/lib/cc/card-expiration.pipe.ts","../../../projects/cnt-masks/src/lib/cc/card-expiration.pipe.mock.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/cnt-masks/src/lib/cc/payment.ts","../../../projects/cnt-masks/src/lib/cc/directives/cc-cvc-format.directive.ts","../../../projects/cnt-masks/src/lib/cc/directives/cc-cvc-format.directive.mock.ts","../../../projects/cnt-masks/src/lib/cc/directives/cc-expiry-format.directive.ts","../../../projects/cnt-masks/src/lib/cc/directives/cc-expiry-format.directive.mock.ts","../../../projects/cnt-masks/src/lib/cc/directives/cc-number-format.directive.ts","../../../projects/cnt-masks/src/lib/cc/directives/cc-number-format.directive.mock.ts","../../../projects/cnt-masks/src/lib/cc/validators/credit-card.validator.ts","../../../projects/cnt-masks/src/lib/mask/adjust-caret-position.function.ts","../../../projects/cnt-masks/src/lib/mask/conform-to-mask.function.ts","../../../projects/cnt-masks/src/lib/mask/create-text-mask-input-element.function.ts","../../../projects/cnt-masks/src/lib/angular-2-text-mask.module.ts","../../../projects/cnt-masks/src/lib/phone/utils.ts","../../../projects/cnt-masks/src/lib/phone/phone-mask.directive.ts","../../../projects/cnt-masks/src/lib/phone/phone-mask.pipe.ts","../../../projects/cnt-masks/src/lib/cnt-masks.module.ts","../../../projects/cnt-masks/src/lib/phone/phone-mask.directive.mock.ts","../../../projects/cnt-masks/src/lib/phone/phone-mask.pipe.mock.ts","../../../projects/cnt-masks/src/public-api.ts","../../../projects/cnt-masks/src/cnt-masks.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cardExpiration',\n})\nexport class CardExpirationPipe implements PipeTransform {\n  transform(value: string): string {\n    if (typeof value !== 'number') {\n      value = value + '';\n    }\n\n    if (typeof value !== 'string') {\n      return value;\n    }\n\n    if (value.length === 3) {\n      value = `0${value}`;\n    }\n\n    return `${value.substring(0, 2)}/${value.substring(2)}`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cardExpiration',\n})\nexport class CardExpirationPipeMock implements PipeTransform {\n  transform(value: string): string {\n    return value;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * Based on:\n * Copyright (c) 2014 Jesse Pollak\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH TH\n */\ninterface ICardObject {\n  type: string;\n  pattern: RegExp;\n  format: RegExp;\n  length: number[];\n  cvcLength: number[];\n  luhn: boolean;\n}\n\nlet cards: ICardObject[];\nlet defaultFormat;\n\nconst indexOf =\n  [].indexOf ||\n  function (this: any[], item: any): number {\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (i in this && this[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\ndefaultFormat = /(\\d{1,4})/g;\n\ncards = [\n  {\n    type: 'amex',\n    pattern: /^3[47]/,\n    format: /(\\d{1,4})(\\d{1,6})?(\\d{1,5})?/,\n    length: [15],\n    cvcLength: [4],\n    luhn: true,\n  },\n  {\n    type: 'dankort',\n    pattern: /^5019/,\n    format: defaultFormat,\n    length: [16],\n    cvcLength: [3],\n    luhn: true,\n  },\n  {\n    type: 'hipercard',\n    pattern: /^(384100|384140|384160|606282|637095|637568|60(?!11))/,\n    format: defaultFormat,\n    length: [14, 15, 16, 17, 18, 19],\n    cvcLength: [3],\n    luhn: true,\n  },\n  {\n    type: 'dinersclub',\n    pattern: /^(36|38|30[0-5])/,\n    format: /(\\d{1,4})(\\d{1,6})?(\\d{1,4})?/,\n    length: [14],\n    cvcLength: [3],\n    luhn: true,\n  },\n  {\n    type: 'discover',\n    pattern: /^(6011|65|64[4-9]|622)/,\n    format: defaultFormat,\n    length: [16],\n    cvcLength: [3],\n    luhn: true,\n  },\n  {\n    type: 'jcb',\n    pattern: /^35/,\n    format: defaultFormat,\n    length: [16],\n    cvcLength: [3],\n    luhn: true,\n  },\n  {\n    type: 'laser',\n    pattern: /^(6706|6771|6709)/,\n    format: defaultFormat,\n    length: [16, 17, 18, 19],\n    cvcLength: [3],\n    luhn: true,\n  },\n  {\n    type: 'maestro',\n    pattern: /^(5018|5020|5038|6304|6703|6708|6759|676[1-3])/,\n    format: defaultFormat,\n    length: [12, 13, 14, 15, 16, 17, 18, 19],\n    cvcLength: [3],\n    luhn: true,\n  },\n  {\n    type: 'mastercard',\n    pattern: /^(5[1-5]|677189)|^(222[1-9]|2[3-6]\\d{2}|27[0-1]\\d|2720)/,\n    format: defaultFormat,\n    length: [16],\n    cvcLength: [3],\n    luhn: true,\n  },\n  {\n    type: 'unionpay',\n    pattern: /^62/,\n    format: defaultFormat,\n    length: [16, 17, 18, 19],\n    cvcLength: [3],\n    luhn: false,\n  },\n  {\n    type: 'visaelectron',\n    pattern: /^4(026|17500|405|508|844|91[37])/,\n    format: defaultFormat,\n    length: [16],\n    cvcLength: [3],\n    luhn: true,\n  },\n  {\n    type: 'elo',\n    // tslint:disable-next-line:max-line-length\n    pattern: /^(4011(78|79)|43(1274|8935)|45(1416|7393|763(1|2))|50(4175|6699|67[0-7][0-9]|9000)|627780|63(6297|6368)|650(03([^4])|04([0-9])|05(0|1)|4(0[5-9]|3[0-9]|8[5-9]|9[0-9])|5([0-2][0-9]|3[0-8])|9([2-6][0-9]|7[0-8])|541|700|720|901)|651652|655000|655021)/,\n    format: defaultFormat,\n    length: [16],\n    cvcLength: [3],\n    luhn: true,\n  },\n  {\n    type: 'visa',\n    pattern: /^4/,\n    format: defaultFormat,\n    length: [13, 16, 19],\n    cvcLength: [3],\n    luhn: true,\n  },\n];\n\nfunction cardFromNumber(num: string): any {\n  let card;\n  let i;\n  let len;\n  const numString = (num + '').replace(/\\D/g, '');\n  for (i = 0, len = cards.length; i < len; i++) {\n    card = cards[i];\n    if (card.pattern.test(numString)) {\n      return card;\n    }\n  }\n\n  return;\n}\n\nfunction cardFromType(type: string): any {\n  let card;\n  let i;\n  let len;\n  for (i = 0, len = cards.length; i < len; i++) {\n    card = cards[i];\n    if (card.type === type) {\n      return card;\n    }\n  }\n\n  return;\n}\n\nfunction luhnCheck(num: string): boolean {\n  let digits;\n  let odd = true;\n  let sum = 0;\n\n  digits = (num + '').split('').reverse();\n\n  digits.forEach((digitString) => {\n    let digit = parseInt(digitString, 10);\n    odd = !odd;\n    if (odd) {\n      digit *= 2;\n    }\n    if (digit > 9) {\n      digit -= 9;\n    }\n    return (sum += digit);\n  });\n\n  return sum % 10 === 0;\n}\n\nfunction hasTextSelected(target?: EventTarget): boolean {\n  let e;\n  try {\n    // If some text is selected\n    if (\n      target &&\n      (target as any).selectionStart != null &&\n      (target as any).selectionStart !== (target as any).selectionEnd\n    ) {\n      return true;\n    }\n  } catch (error) {\n    e = error;\n  }\n\n  return false;\n}\n\nfunction qjon(\n  element: Element | any,\n  eventName: string,\n  callback: (e: Event) => void\n): any {\n  if (element.length) {\n    // handle multiple elements\n    for (const el of Array.from(element)) {\n      qjon(el, eventName, callback);\n    }\n    return;\n  }\n\n  if (eventName.match(' ')) {\n    // handle multiple event attachment\n    for (const multiEventName of Array.from(eventName.split(' '))) {\n      qjon(element, multiEventName, callback);\n    }\n    return;\n  }\n\n  if (element.addEventListener) {\n    return element.addEventListener(eventName, callback, false);\n  }\n\n  if (element.attachEvent) {\n    eventName = 'on' + eventName;\n    return element.attachEvent(eventName, callback);\n  }\n\n  element['on' + eventName] = callback;\n}\n\nfunction trigger(el: Element, name: string, data?: any): boolean {\n  let ev;\n\n  try {\n    ev = new CustomEvent(name, { detail: data });\n  } catch (e) {\n    ev = document.createEvent('CustomEvent');\n    // jsdom doesn't have initCustomEvent, so we need this check for\n    // testing\n    if (ev.initCustomEvent) {\n      ev.initCustomEvent(name, true, true, data);\n    } else {\n      (ev as any).initEvent(name, true, true, data);\n    }\n  }\n\n  return el.dispatchEvent(ev);\n}\n\n// Public\n// @dynamic\nexport class Payment {\n  public static fns = {\n    cardExpiryVal: (value: string) => {\n      let month;\n      let prefix;\n      let year;\n      let ref;\n\n      value = value.replace(/\\s/g, '');\n      (ref = value.split('/', 2)), (month = ref[0]), (year = ref[1]);\n\n      // Allow for year shortcut\n      if ((year != null ? year.length : void 0) === 2 && /^\\d+$/.test(year)) {\n        prefix = new Date().getFullYear();\n        prefix = prefix.toString().slice(0, 2);\n        year = prefix + year;\n      }\n\n      return {\n        month,\n        year,\n      };\n    },\n    validateCardNumber: (num: string) => {\n      let card;\n      let ref;\n\n      num = (num + '').replace(/\\s+|-/g, '');\n      if (!/^\\d+$/.test(num)) {\n        return false;\n      }\n\n      card = cardFromNumber(num);\n      if (!card) {\n        return false;\n      }\n\n      return (\n        ((ref = num.length), indexOf.call(card.length, ref) >= 0) &&\n        (card.luhn === false || luhnCheck(num))\n      );\n    },\n    validateCardExpiry: (month: string, year: string) => {\n      // Allow passing an object\n      let currentTime;\n      let expiry;\n      let prefix;\n      let ref1;\n\n      if (typeof month === 'string' && indexOf.call(month, '/') >= 0) {\n        (ref1 = Payment.fns.cardExpiryVal(month)),\n          (month = ref1.month),\n          (year = ref1.year);\n      }\n\n      if (!(month && year)) {\n        return false;\n      }\n\n      month = month.trim();\n      year = year.trim();\n\n      if (!/^\\d+$/.test(month)) {\n        return false;\n      }\n      if (!/^\\d+$/.test(year)) {\n        return false;\n      }\n\n      const monthInt = parseInt(month, 10);\n\n      if (!(monthInt && monthInt <= 12)) {\n        return false;\n      }\n\n      if (year.length === 2) {\n        prefix = new Date().getFullYear();\n        prefix = prefix.toString().slice(0, 2);\n        year = prefix + year;\n      }\n\n      expiry = new Date(parseInt(year, 10), monthInt);\n      currentTime = new Date();\n\n      // Months start from 0 in JavaScript\n      expiry.setMonth(expiry.getMonth() - 1);\n\n      // The cc expires at the end of the month,\n      // so we need to make the expiry the first day\n      // of the month after\n      expiry.setMonth(expiry.getMonth() + 1, 1);\n\n      return expiry > currentTime;\n    },\n    validateCardCVC: (cvc: string, type?: string) => {\n      let ref;\n      let ref1;\n\n      cvc = cvc.trim();\n      if (!/^\\d+$/.test(cvc)) {\n        return false;\n      }\n\n      if (type && cardFromType(type)) {\n        // Check against a explicit card type\n        ref1 = cardFromType(type);\n        return (\n          (ref = cvc.length),\n          indexOf.call(ref1 != null ? ref1.cvcLength : void 0, ref) >= 0\n        );\n      } else {\n        // Check against all types\n        return cvc.length >= 3 && cvc.length <= 4;\n      }\n    },\n    cardType: (num: string) => {\n      if (!num) {\n        return null;\n      }\n      const ref = cardFromNumber(num);\n      return (ref != null ? ref.type : void 0) || null;\n    },\n    formatCardNumber: (num: string) => {\n      let card;\n      let groups;\n      let upperLength;\n\n      card = cardFromNumber(num);\n      if (!card) {\n        return num;\n      }\n\n      upperLength = card.length[card.length.length - 1];\n\n      num = num.replace(/\\D/g, '');\n      num = num.slice(0, upperLength);\n\n      if (card.format.global) {\n        const ref = num.match(card.format);\n        return ref != null ? ref.join(' ') : void 0;\n      } else {\n        groups = card.format.exec(num);\n        if (groups == null) {\n          return;\n        }\n        groups.shift();\n        groups = groups.filter((n) => n); // Filter empty groups\n        return groups.join(' ');\n      }\n    },\n  };\n\n  public static restrictNumeric(el: Element): any {\n    return qjon(el, 'keypress', restrictNumeric);\n  }\n\n  public static formatCardCVC(el: Element): Element {\n    Payment.restrictNumeric(el);\n    qjon(el, 'keypress', restrictCVC);\n    return el;\n  }\n\n  public static formatCardExpiry(el: Element): Element {\n    let month;\n    let year;\n\n    Payment.restrictNumeric(el);\n    if ((el as any).length && (el as any).length === 2) {\n      (month = (el as any)[0]), (year = (el as any)[1]);\n      this.formatCardExpiryMultiple(month, year);\n    } else {\n      qjon(el, 'keypress', restrictCombinedExpiry);\n      qjon(el, 'keypress', formatExpiry);\n      qjon(el, 'keypress', formatForwardSlash);\n      qjon(el, 'keypress', formatForwardExpiry);\n      qjon(el, 'keydown', formatBackExpiry);\n    }\n    return el;\n  }\n\n  public static formatCardExpiryMultiple(month: string, year: string): any {\n    qjon(month, 'keypress', restrictMonthExpiry);\n    qjon(month, 'keypress', formatMonthExpiry);\n    return qjon(year, 'keypress', restrictYearExpiry);\n  }\n\n  public static formatCardNumber(el: Element, maxLength?: number): Element {\n    Payment.restrictNumeric(el);\n    qjon(el, 'keypress', restrictCardNumber(maxLength));\n    qjon(el, 'keypress', formatCardNumber(maxLength));\n    qjon(el, 'keydown', formatBackCardNumber);\n    qjon(el, 'keyup blur', setCardType);\n    qjon(el, 'paste', reFormatCardNumber);\n    qjon(el, 'input', reFormatCardNumber);\n    return el;\n  }\n}\n// Private\n\n// Format Card Number\n\nfunction reFormatCardNumber(e: Event): number {\n  return setTimeout(() => {\n    let value;\n    const target = e.target as HTMLDataElement;\n\n    if (!target) {\n      return;\n    }\n\n    value = target.value;\n    value = Payment.fns.formatCardNumber(value);\n    if (value) {\n      target.value = value;\n    }\n    return trigger(target, 'change');\n  });\n}\n\nfunction formatCardNumber(maxLength?: number): (event) => boolean {\n  return (e: Event) => {\n    // Only format if input is a number\n    let card;\n    let digit;\n    let i;\n    let length;\n    let re;\n    let target;\n    let upperLength;\n    let upperLengths;\n    let value;\n    let j;\n    let len;\n    digit = String.fromCharCode((e as any).which);\n    if (!/^\\d+$/.test(digit)) {\n      return;\n    }\n\n    target = e.target as HTMLDataElement;\n    value = target.value;\n    card = cardFromNumber(value + digit);\n    length = (value.replace(/\\D/g, '') + digit).length;\n\n    upperLengths = [16];\n    if (card) {\n      upperLengths = card.length;\n    }\n    if (maxLength) {\n      upperLengths = upperLengths.filter((x) => x <= maxLength);\n    }\n\n    // Return if an upper length has been reached\n    for (i = j = 0, len = upperLengths.length; j < len; i = ++j) {\n      upperLength = upperLengths[i];\n      if (length >= upperLength && upperLengths[i + 1]) {\n        continue;\n      }\n      if (length >= upperLength) {\n        return;\n      }\n    }\n\n    // Return if focus isn't at the end of the text\n    if (hasTextSelected(target)) {\n      return;\n    }\n\n    if (card && card.type === 'amex') {\n      // Amex cards are formatted differently\n      re = /^(\\d{4}|\\d{4}\\s\\d{6})$/;\n    } else {\n      re = /(?:^|\\s)(\\d{4})$/;\n    }\n\n    // If '4242' + 4\n    if (re.test(value)) {\n      e.preventDefault();\n      target.value = value + ' ' + digit;\n      return trigger(target, 'change');\n    }\n\n    return;\n  };\n}\n\nfunction formatBackCardNumber(e: Event): boolean {\n  const target = e.target as HTMLDataElement;\n  const value = target.value;\n\n  if ((e as any).meta) {\n    return;\n  }\n\n  // Return unless backspacing\n  if ((e as any).which !== 8) {\n    return;\n  }\n\n  // Return if focus isn't at the end of the text\n  if (hasTextSelected(target)) {\n    return;\n  }\n\n  // Remove the trailing space\n  if (/\\d\\s$/.test(value)) {\n    e.preventDefault();\n    target.value = value.replace(/\\d\\s$/, '');\n    return trigger(target, 'change');\n  } else if (/\\s\\d?$/.test(value)) {\n    e.preventDefault();\n    target.value = value.replace(/\\s\\d?$/, '');\n    return trigger(target, 'change');\n  }\n\n  return;\n}\n\n// Format Expiry\n\nfunction formatExpiry(e: Event): boolean {\n  // Only format if input is a number\n  const digit = String.fromCharCode((e as any).which);\n  if (!/^\\d+$/.test(digit)) {\n    return;\n  }\n\n  const target = e.target as HTMLDataElement;\n  const val = target.value + digit;\n\n  if (/^\\d$/.test(val) && val !== '0' && val !== '1') {\n    e.preventDefault();\n    target.value = '0' + val + ' / ';\n    return trigger(target, 'change');\n  } else if (/^\\d\\d$/.test(val)) {\n    e.preventDefault();\n    target.value = val + ' / ';\n    return trigger(target, 'change');\n  }\n\n  return;\n}\n\nfunction formatMonthExpiry(e: Event): boolean {\n  const digit = String.fromCharCode((e as any).which);\n  if (!/^\\d+$/.test(digit)) {\n    return;\n  }\n\n  const target = e.target as HTMLDataElement;\n  const val = target.value + digit;\n\n  if (/^\\d$/.test(val) && val !== '0' && val !== '1') {\n    e.preventDefault();\n    target.value = '0' + val;\n    return trigger(target, 'change');\n  } else if (/^\\d\\d$/.test(val)) {\n    e.preventDefault();\n    target.value = val;\n    return trigger(target, 'change');\n  }\n\n  return;\n}\n\nfunction formatForwardExpiry(e: Event): boolean {\n  const digit = String.fromCharCode((e as any).which);\n  if (!/^\\d+$/.test(digit)) {\n    return;\n  }\n\n  const target = e.target as HTMLDataElement;\n  const val = target.value;\n\n  if (/^\\d\\d$/.test(val)) {\n    target.value = val + ' / ';\n    return trigger(target, 'change');\n  }\n\n  return;\n}\n\nfunction formatForwardSlash(e: Event): boolean {\n  const slash = String.fromCharCode((e as any).which);\n  if (slash !== '/') {\n    return;\n  }\n\n  const target = e.target as HTMLDataElement;\n  const val = target.value;\n\n  if (/^\\d$/.test(val) && val !== '0') {\n    target.value = '0' + val + ' / ';\n    return trigger(target, 'change');\n  }\n\n  return;\n}\n\nfunction formatBackExpiry(e: Event): boolean {\n  // If shift+backspace is pressed\n  if ((e as any).metaKey) {\n    return;\n  }\n\n  const target = e.target as HTMLDataElement;\n  const value = target.value;\n\n  // Return unless backspacing\n  if ((e as any).which !== 8) {\n    return;\n  }\n\n  // Return if focus isn't at the end of the text\n  if (hasTextSelected(target)) {\n    return;\n  }\n\n  // Remove the trailing space\n  if (/\\d(\\s|\\/)+$/.test(value)) {\n    e.preventDefault();\n    target.value = value.replace(/\\d(\\s|\\/)*$/, '');\n    return trigger(target, 'change');\n  } else if (/\\s\\/\\s?\\d?$/.test(value)) {\n    e.preventDefault();\n    target.value = value.replace(/\\s\\/\\s?\\d?$/, '');\n    return trigger(target, 'change');\n  }\n\n  return;\n}\n\n//  Restrictions\n\nfunction restrictNumeric(e: Event): boolean {\n  // Key event is for a browser shortcut\n  let input;\n  if ((e as any).metaKey || (e as any).ctrlKey) {\n    return true;\n  }\n\n  // If keycode is a space\n  if ((e as any).which === 32) {\n    e.preventDefault();\n    return false;\n  }\n\n  // If keycode is a special char (WebKit)\n  if ((e as any).which === 0) {\n    return true;\n  }\n\n  // If char is a special char (Firefox)\n  if ((e as any).which < 33) {\n    return true;\n  }\n\n  input = String.fromCharCode((e as any).which);\n\n  // Char is a number or a space\n  if (!/[\\d\\s]/.test(input)) {\n    e.preventDefault();\n    return false;\n  }\n}\n\nfunction restrictCardNumber(maxLength?: number): (Event) => void {\n  return (e: Event) => {\n    let length;\n\n    const target = e.target as HTMLDataElement;\n    const digit = String.fromCharCode((e as any).which);\n    if (!/^\\d+$/.test(digit)) {\n      return;\n    }\n\n    if (hasTextSelected(target)) {\n      return;\n    }\n\n    // Restrict number of digits\n    const value = (target.value + digit).replace(/\\D/g, '');\n    const card = cardFromNumber(value);\n\n    length = 16;\n    if (card) {\n      length = card.length[card.length.length - 1];\n    }\n    if (maxLength) {\n      length = Math.min(length, maxLength);\n    }\n\n    if (!(value.length <= length)) {\n      return e.preventDefault();\n    }\n  };\n}\n\nfunction restrictExpiry(e: Event, length: number): void {\n  let value;\n  const target = e.target as HTMLDataElement;\n  const digit = String.fromCharCode((e as any).which);\n  if (!/^\\d+$/.test(digit)) {\n    return;\n  }\n\n  if (hasTextSelected(target)) {\n    return;\n  }\n\n  value = target.value + digit;\n  value = value.replace(/\\D/g, '');\n\n  if (value.length > length) {\n    return e.preventDefault();\n  }\n}\n\nfunction restrictCombinedExpiry(e: Event): void {\n  return restrictExpiry(e, 6);\n}\n\nfunction restrictMonthExpiry(e: Event): void {\n  return restrictExpiry(e, 2);\n}\n\nfunction restrictYearExpiry(e: Event): void {\n  return restrictExpiry(e, 4);\n}\n\nfunction restrictCVC(e: Event): void {\n  const target = e.target as HTMLDataElement;\n  const digit = String.fromCharCode((e as any).which);\n  if (!/^\\d+$/.test(digit)) {\n    return;\n  }\n\n  if (hasTextSelected(target)) {\n    return;\n  }\n\n  const val = target.value + digit;\n  if (!(val.length <= 4)) {\n    return e.preventDefault();\n  }\n}\n\nfunction setCardType(e: Event): boolean {\n  const target = e.target as HTMLDataElement;\n  const val = target.value;\n  const cardType = Payment.fns.cardType(val) || 'unknown';\n\n  if (target && target.classList && !target.classList.contains(cardType)) {\n    target.classList.add('unknown');\n    cards.forEach((card) => target.classList.remove(card.type));\n\n    target.classList.add(cardType);\n\n    if (cardType !== 'unknown') {\n      if (target.classList.contains('identified')) {\n        target.classList.add('identified');\n      }\n    } else {\n      target.classList.remove('identified');\n    }\n    return trigger(target, 'payment.cardType', cardType);\n  }\n\n  return;\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { Payment } from '../payment';\n\n@Directive({\n  selector: '[cntMaskCCCvc]',\n})\nexport class CCCvcFormatDirective {\n  constructor(private el: ElementRef) {\n    const element = this.el.nativeElement;\n\n    // call lib functions\n    Payment.formatCardCVC(element);\n    Payment.restrictNumeric(element);\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[cntMaskCCCvc]',\n})\nexport class CCCvcFormatDirectiveMock {}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { Payment } from '../payment';\n\n@Directive({\n  selector: '[cntMaskCCExp]',\n})\nexport class CCExpiryFormatDirective {\n  constructor(private el: ElementRef) {\n    const element = this.el.nativeElement;\n\n    // call lib functions\n    Payment.formatCardExpiry(element);\n    Payment.restrictNumeric(element);\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[cntMaskCCExp]',\n})\nexport class CCExpiryFormatDirectiveMock {}\n","import { Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\nimport { Payment } from '../payment';\n\n@Directive({\n  selector: '[cntMaskCCNum]',\n})\nexport class CCNumberFormatDirective {\n  cardType: string | null;\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {\n    const element = this.el.nativeElement;\n    this.cardType = '';\n\n    // call lib functions\n    Payment.formatCardNumber(element);\n    Payment.restrictNumeric(element);\n  }\n\n  @HostListener('keypress', ['$event'])\n  onKeypress(e: Event): void {\n    const element = this.el.nativeElement;\n    const elementValue = element.value;\n\n    this.cardType = Payment.fns.cardType(elementValue);\n\n    if (this.cardType && this.cardType !== '') {\n      this.renderer.removeClass(element, this.cardType);\n    } else {\n      this.cardType = '';\n    }\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[cntMaskCCNum]',\n})\nexport class CCNumberFormatDirectiveMock {}\n","import { FormControl, ValidationErrors } from '@angular/forms';\nimport { Payment } from '../payment';\n\nexport class CreditCardValidator {\n  /**\n   * Validates a cc number\n   */\n  static validateCardNumber(control: FormControl): ValidationErrors {\n    if (control) {\n      const isValid = Payment.fns.validateCardNumber(control.value);\n\n      if (!isValid) {\n        return {\n          cardNumber: true,\n        };\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Validates the expiry date.\n   * Breaks exp by \"/\" string and assumes that first array entry is month and second year\n   * Also removes any spaces\n   */\n  static validateCardExpiry(control: FormControl): ValidationErrors {\n    if (control) {\n      const controlValue = control.value.split('/');\n      let isValid = false;\n\n      if (controlValue.length > 1) {\n        const month = controlValue[0].replace(/^\\s+|\\s+$/g, '');\n        const year = controlValue[1].replace(/^\\s+|\\s+$/g, '');\n\n        isValid = Payment.fns.validateCardExpiry(month, year);\n      }\n\n      if (!isValid) {\n        return {\n          cardExpiry: true,\n        };\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Validates cards CVC\n   * Also removes any spaces\n   */\n  static validateCardCvc(control: FormControl): ValidationErrors {\n    if (control) {\n      const isValid = Payment.fns.validateCardCVC(control.value);\n\n      if (!isValid) {\n        return {\n          cardCvc: true,\n        };\n      }\n    }\n\n    return null;\n  }\n}\n","const defaultArray = [];\nconst emptyString = '';\n\nexport function adjustCaretPosition({\n  previousConformedValue = emptyString,\n  previousPlaceholder = emptyString,\n  currentCaretPosition = 0,\n  conformedValue,\n  rawValue,\n  placeholderChar,\n  placeholder,\n  indexesOfPipedChars = defaultArray,\n  caretTrapIndexes = defaultArray,\n}: any): number {\n  if (currentCaretPosition === 0 || !rawValue.length) {\n    return 0;\n  }\n\n  // Store lengths for faster performance?\n  const rawValueLength = rawValue.length;\n  const previousConformedValueLength = previousConformedValue.length;\n  const placeholderLength = placeholder.length;\n  const conformedValueLength = conformedValue.length;\n\n  // This tells us how long the edit is. If user modified input from `(2__)` to `(243__)`,\n  // we know the user in this instance pasted two characters\n  const editLength = rawValueLength - previousConformedValueLength;\n\n  // If the edit length is positive, that means the user is adding characters, not deleting.\n  const isAddition = editLength > 0;\n\n  // This is the first raw value the user entered that needs to be conformed to mask\n  const isFirstRawValue = previousConformedValueLength === 0;\n\n  // A partial multi-character edit happens when the user makes a partial selection in their\n  // input and edits that selection. That is going from `(123) 432-4348` to `() 432-4348` by\n  // selecting the first 3 digits and pressing backspace.\n  //\n  // Such cases can also happen when the user presses the backspace while holding down the ALT\n  // key.\n  const isPartialMultiCharEdit =\n    editLength > 1 && !isAddition && !isFirstRawValue;\n\n  // This algorithm doesn't support all cases of multi-character edits, so we just return\n  // the current caret position.\n  //\n  // This works fine for most cases.\n  if (isPartialMultiCharEdit) {\n    return currentCaretPosition;\n  }\n\n  // For a mask like (111), if the `previousConformedValue` is (1__) and user attempts to enter\n  // `f` so the `rawValue` becomes (1f__), the new `conformedValue` would be (1__), which is the\n  // same as the original `previousConformedValue`. We handle this case differently for caret\n  // positioning.\n  const possiblyHasRejectedChar =\n    isAddition &&\n    (previousConformedValue === conformedValue ||\n      conformedValue === placeholder);\n\n  let startingSearchIndex = 0;\n  let trackRightCharacter;\n  let targetChar;\n\n  if (possiblyHasRejectedChar) {\n    startingSearchIndex = currentCaretPosition - editLength;\n  } else {\n    // At this point in the algorithm, we want to know where the caret is right before the raw input\n    // has been conformed, and then see if we can find that same spot in the conformed input.\n    //\n    // We do that by seeing what character lies immediately before the caret, and then look for that\n    // same character in the conformed input and place the caret there.\n\n    // First, we need to normalize the inputs so that letter capitalization between raw input and\n    // conformed input wouldn't matter.\n    const normalizedConformedValue = conformedValue.toLowerCase();\n    const normalizedRawValue = rawValue.toLowerCase();\n\n    // Then we take all characters that come before where the caret currently is.\n    const leftHalfChars = normalizedRawValue\n      .substr(0, currentCaretPosition)\n      .split(emptyString);\n\n    // Now we find all the characters in the left half that exist in the conformed input\n    // This step ensures that we don't look for a character that was filtered out or rejected by `conformToMask`.\n    const intersection = leftHalfChars.filter(\n      (char) => normalizedConformedValue.indexOf(char) !== -1,\n    );\n\n    // The last character in the intersection is the character we want to look for in the conformed\n    // value and the one we want to adjust the caret close to\n    targetChar = intersection[intersection.length - 1];\n\n    // Calculate the number of mask characters in the previous placeholder\n    // from the start of the string up to the place where the caret is\n    const previousLeftMaskChars = previousPlaceholder\n      .substr(0, intersection.length)\n      .split(emptyString)\n      .filter((char) => char !== placeholderChar).length;\n\n    // Calculate the number of mask characters in the current placeholder\n    // from the start of the string up to the place where the caret is\n    const leftMaskChars = placeholder\n      .substr(0, intersection.length)\n      .split(emptyString)\n      .filter((char) => char !== placeholderChar).length;\n\n    // Has the number of mask characters up to the caret changed?\n    const masklengthChanged = leftMaskChars !== previousLeftMaskChars;\n\n    // Detect if `targetChar` is a mask character and has moved to the left\n    const targetIsMaskMovingLeft =\n      previousPlaceholder[intersection.length - 1] !== undefined &&\n      placeholder[intersection.length - 2] !== undefined &&\n      previousPlaceholder[intersection.length - 1] !== placeholderChar &&\n      previousPlaceholder[intersection.length - 1] !==\n        placeholder[intersection.length - 1] &&\n      previousPlaceholder[intersection.length - 1] ===\n        placeholder[intersection.length - 2];\n\n    // If deleting and the `targetChar` `is a mask character and `masklengthChanged` is true\n    // or the mask is moving to the left, we can't use the selected `targetChar` any longer\n    // if we are not at the end of the string.\n    // In this case, change tracking strategy and track the character to the right of the caret.\n    if (\n      !isAddition &&\n      (masklengthChanged || targetIsMaskMovingLeft) &&\n      previousLeftMaskChars > 0 &&\n      placeholder.indexOf(targetChar) > -1 &&\n      rawValue[currentCaretPosition] !== undefined\n    ) {\n      trackRightCharacter = true;\n      targetChar = rawValue[currentCaretPosition];\n    }\n\n    // It is possible that `targetChar` will appear multiple times in the conformed value.\n    // We need to know not to select a character that looks like our target character from the placeholder or\n    // the piped characters, so we inspect the piped characters and the placeholder to see if they contain\n    // characters that match our target character.\n\n    // If the `conformedValue` got piped, we need to know which characters were piped in so that when we look for\n    // our `targetChar`, we don't select a piped char by mistake\n    const pipedChars = indexesOfPipedChars.map(\n      (index) => normalizedConformedValue[index],\n    );\n\n    // We need to know how many times the `targetChar` occurs in the piped characters.\n    const countTargetCharInPipedChars = pipedChars.filter(\n      (char) => char === targetChar,\n    ).length;\n\n    // We need to know how many times it occurs in the intersection\n    const countTargetCharInIntersection = intersection.filter(\n      (char) => char === targetChar,\n    ).length;\n\n    // We need to know if the placeholder contains characters that look like\n    // our `targetChar`, so we don't select one of those by mistake.\n    const countTargetCharInPlaceholder = placeholder\n      .substr(0, placeholder.indexOf(placeholderChar))\n      .split(emptyString)\n      .filter(\n        (char, index) =>\n          // Check if `char` is the same as our `targetChar`, so we account for it\n          char === targetChar &&\n          // but also make sure that both the `rawValue` and placeholder don't have the same character at the same\n          // index because if they are equal, that means we are already counting those characters in\n          // `countTargetCharInIntersection`\n          rawValue[index] !== char,\n      ).length;\n\n    // The number of times we need to see occurrences of the `targetChar` before we know it is the one we're looking\n    // for is:\n    const requiredNumberOfMatches =\n      countTargetCharInPlaceholder +\n      countTargetCharInIntersection +\n      countTargetCharInPipedChars +\n      // The character to the right of the caret isn't included in `intersection`\n      // so add one if we are tracking the character to the right\n      (trackRightCharacter ? 1 : 0);\n\n    // Now we start looking for the location of the `targetChar`.\n    // We keep looping forward and store the index in every iteration. Once we have encountered\n    // enough occurrences of the target character, we break out of the loop\n    // If are searching for the second `1` in `1214`, `startingSearchIndex` will point at `4`.\n    let numberOfEncounteredMatches = 0;\n    for (let i = 0; i < conformedValueLength; i++) {\n      const conformedValueChar = normalizedConformedValue[i];\n\n      startingSearchIndex = i + 1;\n\n      if (conformedValueChar === targetChar) {\n        numberOfEncounteredMatches++;\n      }\n\n      if (numberOfEncounteredMatches >= requiredNumberOfMatches) {\n        break;\n      }\n    }\n  }\n\n  // At this point, if we simply return `startingSearchIndex` as the adjusted caret position,\n  // most cases would be handled. However, we want to fast forward or rewind the caret to the\n  // closest placeholder character if it happens to be in a non-editable spot. That's what the next\n  // logic is for.\n\n  // In case of addition, we fast forward.\n  if (isAddition) {\n    // We want to remember the last placeholder character encountered so that if the mask\n    // contains more characters after the last placeholder character, we don't forward the caret\n    // that far to the right. Instead, we stop it at the last encountered placeholder character.\n    let lastPlaceholderChar = startingSearchIndex;\n\n    for (let i = startingSearchIndex; i <= placeholderLength; i++) {\n      if (placeholder[i] === placeholderChar) {\n        lastPlaceholderChar = i;\n      }\n\n      if (\n        // If we're adding, we can position the caret at the next placeholder character.\n        placeholder[i] === placeholderChar ||\n        // If a caret trap was set by a mask function, we need to stop at the trap.\n        caretTrapIndexes.indexOf(i) !== -1 ||\n        // This is the end of the placeholder. We cannot move any further. Let's put the caret there.\n        i === placeholderLength\n      ) {\n        return lastPlaceholderChar;\n      }\n    }\n  } else {\n    // In case of deletion, we rewind.\n    if (trackRightCharacter) {\n      // Searching for the character that was to the right of the caret\n      // We start at `startingSearchIndex` - 1 because it includes one character extra to the right\n      for (let i = startingSearchIndex - 1; i >= 0; i--) {\n        // If tracking the character to the right of the cursor, we move to the left until\n        // we found the character and then place the caret right before it\n\n        if (\n          // `targetChar` should be in `conformedValue`, since it was in `rawValue`, just\n          // to the right of the caret\n          conformedValue[i] === targetChar ||\n          // If a caret trap was set by a mask function, we need to stop at the trap.\n          caretTrapIndexes.indexOf(i) !== -1 ||\n          // This is the beginning of the placeholder. We cannot move any further.\n          // Let's put the caret there.\n          i === 0\n        ) {\n          return i;\n        }\n      }\n    } else {\n      // Searching for the first placeholder or caret trap to the left\n\n      for (let i = startingSearchIndex; i >= 0; i--) {\n        // If we're deleting, we stop the caret right before the placeholder character.\n        // For example, for mask `(111) 11`, current conformed input `(456) 86`. If user\n        // modifies input to `(456 86`. That is, they deleted the `)`, we place the caret\n        // right after the first `6`\n\n        if (\n          // If we're deleting, we can position the caret right before the placeholder character\n          placeholder[i - 1] === placeholderChar ||\n          // If a caret trap was set by a mask function, we need to stop at the trap.\n          caretTrapIndexes.indexOf(i) !== -1 ||\n          // This is the beginning of the placeholder. We cannot move any further.\n          // Let's put the caret there.\n          i === 0\n        ) {\n          return i;\n        }\n      }\n    }\n  }\n}\n","export const defaultPlaceholderChar = '_';\n\nconst emptyArray = [];\nconst emptyString = '';\n\nfunction convertMaskToPlaceholder(\n  mask: any[] = emptyArray,\n  placeholderChar: string = defaultPlaceholderChar,\n): string {\n  if (!Array.isArray(mask)) {\n    throw new Error(\n      'Text-mask:convertMaskToPlaceholder; The mask property must be an array.',\n    );\n  }\n\n  if (mask.indexOf(placeholderChar) !== -1) {\n    throw new Error(\n      'Placeholder character must not be used as part of the mask. Please specify a character ' +\n        'that is not present in your mask as your placeholder character.\\n\\n' +\n        `The placeholder character that was received is: ${JSON.stringify(\n          placeholderChar,\n        )}\\n\\n` +\n        `The mask that was received is: ${JSON.stringify(mask)}`,\n    );\n  }\n\n  return mask\n    .map((char) => {\n      return char instanceof RegExp ? placeholderChar : char;\n    })\n    .join('');\n}\n\nconst strCaretTrap = '[]';\nexport function processCaretTraps(\n  mask: any[],\n): { maskWithoutCaretTraps: any; indexes: any[] } {\n  const indexes = [];\n\n  let indexOfCaretTrap;\n  while (\n    // tslint:disable-next-line: no-conditional-assignment\n    ((indexOfCaretTrap = mask.indexOf(strCaretTrap)), indexOfCaretTrap !== -1)\n  ) {\n    // eslint-disable-line\n    indexes.push(indexOfCaretTrap);\n\n    mask.splice(indexOfCaretTrap, 1);\n  }\n\n  return { maskWithoutCaretTraps: mask, indexes };\n}\n\nexport function conformToMask(\n  rawValue: string = emptyString,\n  mask: any[] | any = emptyArray,\n  config: any = {},\n): { conformedValue: string; meta: { someCharsRejected: boolean } } {\n  if (!Array.isArray(mask)) {\n    // If someone passes a function as the mask property, we should call the\n    // function to get the mask array - Normally this is handled by the\n    // `createTextMaskInputElement:update` function - this allows mask functions\n    // to be used directly with `conformToMask`\n    if (typeof mask === 'function') {\n      // call the mask function to get the mask array\n      mask = mask(rawValue, config);\n\n      // mask functions can setup caret traps to have some control over how the caret moves. We need to process\n      // the mask for any caret traps. `processCaretTraps` will remove the caret traps from the mask\n      mask = processCaretTraps(mask).maskWithoutCaretTraps;\n    } else {\n      throw new Error(\n        'Text-mask:conformToMask; The mask property must be an array.',\n      );\n    }\n  }\n\n  // These configurations tell us how to conform the mask\n  const {\n    guide = true,\n    previousConformedValue = emptyString,\n    placeholderChar = defaultPlaceholderChar,\n    placeholder = convertMaskToPlaceholder(mask, placeholderChar),\n    currentCaretPosition,\n    keepCharPositions,\n  } = config;\n\n  // The configs below indicate that the user wants the algorithm to work in *no guide* mode\n  const suppressGuide = guide === false && previousConformedValue !== undefined;\n\n  // Calculate lengths once for performance\n  const rawValueLength = rawValue.length;\n  const previousConformedValueLength = previousConformedValue.length;\n  const placeholderLength = placeholder.length;\n  const maskLength = mask.length;\n\n  // This tells us the number of edited characters and the direction in which they were edited (+/-)\n  const editDistance = rawValueLength - previousConformedValueLength;\n\n  // In *no guide* mode, we need to know if the user is trying to add a character or not\n  const isAddition = editDistance > 0;\n\n  // Tells us the index of the first change. For (438) 394-4938 to (38) 394-4938, that would be 1\n  const indexOfFirstChange =\n    currentCaretPosition + (isAddition ? -editDistance : 0);\n\n  // We're also gonna need the index of last change, which we can derive as follows...\n  const indexOfLastChange = indexOfFirstChange + Math.abs(editDistance);\n\n  // If `conformToMask` is configured to keep character positions, that is, for mask 111, previous value\n  // _2_ and raw value 3_2_, the new conformed value should be 32_, not 3_2 (default behavior). That's in the case of\n  // addition. And in the case of deletion, previous value _23, raw value _3, the new conformed string should be\n  // __3, not _3_ (default behavior)\n  //\n  // The next block of logic handles keeping character positions for the case of deletion. (Keeping\n  // character positions for the case of addition is further down since it is handled differently.)\n  // To do this, we want to compensate for all characters that were deleted\n  if (keepCharPositions === true && !isAddition) {\n    // We will be storing the new placeholder characters in this variable.\n    let compensatingPlaceholderChars = emptyString;\n\n    // For every character that was deleted from a placeholder position, we add a placeholder char\n    for (let i = indexOfFirstChange; i < indexOfLastChange; i++) {\n      if (placeholder[i] === placeholderChar) {\n        compensatingPlaceholderChars += placeholderChar;\n      }\n    }\n\n    // Now we trick our algorithm by modifying the raw value to make it contain additional placeholder characters\n    // That way when the we start laying the characters again on the mask, it will keep the non-deleted characters\n    // in their positions.\n    rawValue =\n      rawValue.slice(0, indexOfFirstChange) +\n      compensatingPlaceholderChars +\n      rawValue.slice(indexOfFirstChange, rawValueLength);\n  }\n\n  // Convert `rawValue` string to an array, and mark characters based on whether they are newly added or have\n  // existed in the previous conformed value. Identifying new and old characters is needed for `conformToMask`\n  // to work if it is configured to keep character positions.\n  const rawValueArr = rawValue.split(emptyString).map((char, i) => ({\n    char,\n    isNew: i >= indexOfFirstChange && i < indexOfLastChange,\n  }));\n\n  // The loop below removes masking characters from user input. For example, for mask\n  // `00 (111)`, the placeholder would be `00 (___)`. If user input is `00 (234)`, the loop below\n  // would remove all characters but `234` from the `rawValueArr`. The rest of the algorithm\n  // then would lay `234` on top of the available placeholder positions in the mask.\n  for (let i = rawValueLength - 1; i >= 0; i--) {\n    const { char } = rawValueArr[i];\n\n    if (char !== placeholderChar) {\n      const shouldOffset =\n        i >= indexOfFirstChange && previousConformedValueLength === maskLength;\n\n      if (char === placeholder[shouldOffset ? i - editDistance : i]) {\n        rawValueArr.splice(i, 1);\n      }\n    }\n  }\n\n  // This is the variable that we will be filling with characters as we figure them out\n  // in the algorithm below\n  let conformedValue = emptyString;\n  let someCharsRejected = false;\n\n  // Ok, so first we loop through the placeholder looking for placeholder characters to fill up.\n  placeholderLoop: for (let i = 0; i < placeholderLength; i++) {\n    const charInPlaceholder = placeholder[i];\n\n    // We see one. Let's find out what we can put in it.\n    if (charInPlaceholder === placeholderChar) {\n      // But before that, do we actually have any user characters that need a place?\n      if (rawValueArr.length > 0) {\n        // We will keep chipping away at user input until either we run out of characters\n        // or we find at least one character that we can map.\n        while (rawValueArr.length > 0) {\n          // Let's retrieve the first user character in the queue of characters we have left\n          const { char: rawValueChar, isNew } = rawValueArr.shift();\n\n          // If the character we got from the user input is a placeholder character (which happens\n          // regularly because user input could be something like (540) 90_-____, which includes\n          // a bunch of `_` which are placeholder characters) and we are not in *no guide* mode,\n          // then we map this placeholder character to the current spot in the placeholder\n          if (rawValueChar === placeholderChar && suppressGuide !== true) {\n            conformedValue += placeholderChar;\n\n            // And we go to find the next placeholder character that needs filling\n            continue placeholderLoop;\n\n            // Else if, the character we got from the user input is not a placeholder, let's see\n            // if the current position in the mask can accept it.\n          } else if (mask[i].test(rawValueChar)) {\n            // we map the character differently based on whether we are keeping character positions or not.\n            // If any of the conditions below are met, we simply map the raw value character to the\n            // placeholder position.\n            if (\n              keepCharPositions !== true ||\n              isNew === false ||\n              previousConformedValue === emptyString ||\n              guide === false ||\n              !isAddition\n            ) {\n              conformedValue += rawValueChar;\n            } else {\n              // We enter this block of code if we are trying to keep character positions and none of the conditions\n              // above is met. In this case, we need to see if there's an available spot for the raw value character\n              // to be mapped to. If we couldn't find a spot, we will discard the character.\n              //\n              // For example, for mask `1111`, previous conformed value `_2__`, raw value `942_2__`. We can map the\n              // `9`, to the first available placeholder position, but then, there are no more spots available for the\n              // `4` and `2`. So, we discard them and end up with a conformed value of `92__`.\n              const rawValueArrLength = rawValueArr.length;\n              let indexOfNextAvailablePlaceholderChar = null;\n\n              // Let's loop through the remaining raw value characters. We are looking for either a suitable spot, ie,\n              // a placeholder character or a non-suitable spot, ie, a non-placeholder character that is not new.\n              // If we see a suitable spot first, we store its position and exit the loop. If we see a non-suitable\n              // spot first, we exit the loop and our `indexOfNextAvailablePlaceholderChar` will stay as `null`.\n              for (let j = 0; j < rawValueArrLength; j++) {\n                const charData = rawValueArr[j];\n\n                if (\n                  charData.char !== placeholderChar &&\n                  charData.isNew === false\n                ) {\n                  break;\n                }\n\n                if (charData.char === placeholderChar) {\n                  indexOfNextAvailablePlaceholderChar = j;\n                  break;\n                }\n              }\n\n              // If `indexOfNextAvailablePlaceholderChar` is not `null`, that means the character is not blocked.\n              // We can map it. And to keep the character positions, we remove the placeholder character\n              // from the remaining characters\n              if (indexOfNextAvailablePlaceholderChar !== null) {\n                conformedValue += rawValueChar;\n                rawValueArr.splice(indexOfNextAvailablePlaceholderChar, 1);\n\n                // If `indexOfNextAvailablePlaceholderChar` is `null`, that means the character is blocked. We have to\n                // discard it.\n              } else {\n                i--;\n              }\n            }\n\n            // Since we've mapped this placeholder position. We move on to the next one.\n            continue placeholderLoop;\n          } else {\n            someCharsRejected = true;\n          }\n        }\n      }\n\n      // We reach this point when we've mapped all the user input characters to placeholder\n      // positions in the mask. In *guide* mode, we append the left over characters in the\n      // placeholder to the `conformedString`, but in *no guide* mode, we don't wanna do that.\n      //\n      // That is, for mask `(111)` and user input `2`, we want to return `(2`, not `(2__)`.\n      if (suppressGuide === false) {\n        conformedValue += placeholder.substr(i, placeholderLength);\n      }\n\n      // And we break\n      break;\n\n      // Else, the charInPlaceholder is not a placeholderChar. That is, we cannot fill it\n      // with user input. So we just map it to the final output\n    } else {\n      conformedValue += charInPlaceholder;\n    }\n  }\n\n  // The following logic is needed to deal with the case of deletion in *no guide* mode.\n  //\n  // Consider the silly mask `(111) /// 1`. What if user tries to delete the last placeholder\n  // position? Something like `(589) /// `. We want to conform that to `(589`. Not `(589) /// `.\n  // That's why the logic below finds the last filled placeholder character, and removes everything\n  // from that point on.\n  if (suppressGuide && isAddition === false) {\n    let indexOfLastFilledPlaceholderChar = null;\n\n    // Find the last filled placeholder position and substring from there\n    for (let i = 0; i < conformedValue.length; i++) {\n      if (placeholder[i] === placeholderChar) {\n        indexOfLastFilledPlaceholderChar = i;\n      }\n    }\n\n    if (indexOfLastFilledPlaceholderChar !== null) {\n      // We substring from the beginning until the position after the last filled placeholder char.\n      conformedValue = conformedValue.substr(\n        0,\n        indexOfLastFilledPlaceholderChar + 1,\n      );\n    } else {\n      // If we couldn't find `indexOfLastFilledPlaceholderChar` that means the user deleted\n      // the first character in the mask. So we return an empty string.\n      conformedValue = emptyString;\n    }\n  }\n\n  return { conformedValue, meta: { someCharsRejected } };\n}\n","import { adjustCaretPosition } from './adjust-caret-position.function';\nimport {\n  conformToMask,\n  defaultPlaceholderChar,\n  processCaretTraps,\n} from './conform-to-mask.function';\n\nconst emptyArray = [];\nconst emptyString = '';\n\nconst isAndroid =\n  typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\nconst defer: any =\n  typeof requestAnimationFrame !== 'undefined'\n    ? requestAnimationFrame\n    : setTimeout;\n\nfunction isString(value: any): boolean {\n  return typeof value === 'string' || value instanceof String;\n}\n\nfunction isNumber(value: any): boolean {\n  return (\n    typeof value === 'number' &&\n    (value as any).length === undefined &&\n    !isNaN(value)\n  );\n}\n\nexport function convertMaskToPlaceholder(\n  mask: any = emptyArray,\n  placeholderChar: string = defaultPlaceholderChar,\n): any {\n  if (!Array.isArray(mask)) {\n    throw new Error(\n      'Text-mask:convertMaskToPlaceholder; The mask property must be an array.',\n    );\n  }\n\n  if (mask.indexOf(placeholderChar) !== -1) {\n    throw new Error(\n      'Placeholder character must not be used as part of the mask. Please specify a character ' +\n        'that is not present in your mask as your placeholder character.\\n\\n' +\n        `The placeholder character that was received is: ${JSON.stringify(\n          placeholderChar,\n        )}\\n\\n` +\n        `The mask that was received is: ${JSON.stringify(mask)}`,\n    );\n  }\n\n  return mask\n    .map((char) => {\n      return char instanceof RegExp ? placeholderChar : char;\n    })\n    .join('');\n}\n\nexport function createTextMaskInputElement(\n  config: any,\n): { state: any; update: any } {\n  // Anything that we will need to keep between `update` calls, we will store in this `state` object.\n  const state = {\n    previousConformedValue: undefined,\n    previousPlaceholder: undefined,\n  };\n\n  return {\n    state,\n\n    // `update` is called by framework components whenever they want to update the `value` of the input element.\n    // The caller can send a `rawValue` to be conformed and set on the input element. However, the default use-case\n    // is for this to be read from the `inputElement` directly.\n    update(\n      rawValue: any,\n      {\n        inputElement,\n        mask: providedMask,\n        guide,\n        pipe,\n        placeholderChar = defaultPlaceholderChar,\n        keepCharPositions = false,\n        showMask = false,\n      }: any = config,\n    ): void {\n      // if `rawValue` is `undefined`, read from the `inputElement`\n      if (typeof rawValue === 'undefined') {\n        rawValue = inputElement.value;\n      }\n\n      // If `rawValue` equals `state.previousConformedValue`, we don't need to change anything. So, we return.\n      // This check is here to handle controlled framework components that repeat the `update` call on every render.\n      if (rawValue === state.previousConformedValue) {\n        return;\n      }\n\n      // Text Mask accepts masks that are a combination of a `mask` and a `pipe` that work together. If such a `mask` is\n      // passed, we de-structure it below, so the rest of the code can work normally as if a separate `mask` and a `pipe`\n      // were passed.\n      if (\n        typeof providedMask === 'object' &&\n        providedMask.pipe !== undefined &&\n        providedMask.mask !== undefined\n      ) {\n        pipe = providedMask.pipe;\n        providedMask = providedMask.mask;\n      }\n\n      // The `placeholder` is an essential piece of how Text Mask works. For a mask like `(111)`, the placeholder would\n      // be `(___)` if the `placeholderChar` is set to `_`.\n      let placeholder;\n\n      // We don't know what the mask would be yet. If it is an array, we take it as is, but if it's a function, we will\n      // have to call that function to get the mask array.\n      let mask;\n\n      // If the provided mask is an array, we can call `convertMaskToPlaceholder` here once and we'll always have the\n      // correct `placeholder`.\n      if (providedMask instanceof Array) {\n        placeholder = convertMaskToPlaceholder(providedMask, placeholderChar);\n      }\n\n      // In framework components that support reactivity, it's possible to turn off masking by passing\n      // `false` for `mask` after initialization. See https://github.com/text-mask/text-mask/pull/359\n      if (providedMask === false) {\n        return;\n      }\n\n      // We check the provided `rawValue` before moving further.\n      // If it's something we can't work with `getSafeRawValue` will throw.\n      const safeRawValue = getSafeRawValue(rawValue);\n\n      // `selectionEnd` indicates to us where the caret position is after the user has typed into the input\n      const { selectionEnd: currentCaretPosition } = inputElement;\n\n      // We need to know what the `previousConformedValue` and `previousPlaceholder` is from the previous `update` call\n      const { previousConformedValue, previousPlaceholder } = state;\n\n      let caretTrapIndexes;\n\n      // If the `providedMask` is a function. We need to call it at every `update` to get the `mask` array.\n      // Then we also need to get the `placeholder`\n      if (typeof providedMask === 'function') {\n        mask = providedMask(safeRawValue, {\n          currentCaretPosition,\n          previousConformedValue,\n          placeholderChar,\n        });\n\n        // disable masking if `mask` is `false`\n        if (mask === false) {\n          return;\n        }\n\n        // mask functions can setup caret traps to have some control over how the caret moves. We need to process\n        // the mask for any caret traps. `processCaretTraps` will remove the caret traps from the mask and return\n        // the indexes of the caret traps.\n        const { maskWithoutCaretTraps, indexes } = processCaretTraps(mask);\n\n        mask = maskWithoutCaretTraps; // The processed mask is what we're interested in\n        caretTrapIndexes = indexes; // And we need to store these indexes because they're needed by `adjustCaretPosition`\n\n        placeholder = convertMaskToPlaceholder(mask, placeholderChar);\n\n        // If the `providedMask` is not a function, we just use it as-is.\n      } else {\n        mask = providedMask;\n      }\n\n      // The following object will be passed to `conformToMask` to determine how the `rawValue` will be conformed\n      const conformToMaskConfig = {\n        previousConformedValue,\n        guide,\n        placeholderChar,\n        pipe,\n        placeholder,\n        currentCaretPosition,\n        keepCharPositions,\n      };\n\n      // `conformToMask` returns `conformedValue` as part of an object for future API flexibility\n      const { conformedValue } = conformToMask(\n        safeRawValue,\n        mask,\n        conformToMaskConfig,\n      );\n\n      // The following few lines are to support the `pipe` feature.\n      const piped = typeof pipe === 'function';\n\n      let pipeResults = {};\n\n      // If `pipe` is a function, we call it.\n      if (piped) {\n        // `pipe` receives the `conformedValue` and the configurations with which `conformToMask` was called.\n        pipeResults = pipe(conformedValue, {\n          rawValue: safeRawValue,\n          ...conformToMaskConfig,\n        });\n\n        // `pipeResults` should be an object. But as a convenience, we allow the pipe author to just return `false` to\n        // indicate rejection. Or return just a string when there are no piped characters.\n        // If the `pipe` returns `false` or a string, the block below turns it into an object that the rest\n        // of the code can work with.\n        if (pipeResults === false) {\n          // If the `pipe` rejects `conformedValue`, we use the `previousConformedValue`, and set `rejected` to `true`.\n          pipeResults = { value: previousConformedValue, rejected: true };\n        } else if (isString(pipeResults)) {\n          pipeResults = { value: pipeResults };\n        }\n      }\n\n      // Before we proceed, we need to know which conformed value to use, the one returned by the pipe or the one\n      // returned by `conformToMask`.\n      const finalConformedValue = piped\n        ? (pipeResults as any).value\n        : conformedValue;\n\n      // After determining the conformed value, we will need to know where to set\n      // the caret position. `adjustCaretPosition` will tell us.\n      const adjustedCaretPosition = adjustCaretPosition({\n        previousConformedValue,\n        previousPlaceholder,\n        conformedValue: finalConformedValue,\n        placeholder,\n        rawValue: safeRawValue,\n        currentCaretPosition,\n        placeholderChar,\n        indexesOfPipedChars: (pipeResults as any).indexesOfPipedChars,\n        caretTrapIndexes,\n      });\n\n      // Text Mask sets the input value to an empty string when the condition below is set. It provides a better UX.\n      const inputValueShouldBeEmpty =\n        finalConformedValue === placeholder && adjustedCaretPosition === 0;\n      const emptyValue = showMask ? placeholder : emptyString;\n      const inputElementValue = inputValueShouldBeEmpty\n        ? emptyValue\n        : finalConformedValue;\n\n      state.previousConformedValue = inputElementValue; // store value for access for next time\n      state.previousPlaceholder = placeholder;\n\n      // In some cases, this `update` method will be repeatedly called with a raw value that has already been conformed\n      // and set to `inputElement.value`. The below check guards against needlessly readjusting the input state.\n      // See https://github.com/text-mask/text-mask/issues/231\n      if (inputElement.value === inputElementValue) {\n        return;\n      }\n\n      inputElement.value = inputElementValue; // set the input value\n      safeSetSelection(inputElement, adjustedCaretPosition); // adjust caret position\n    },\n  };\n}\n\nfunction safeSetSelection(element: any, selectionPosition: any): any {\n  if (document.activeElement === element) {\n    if (isAndroid) {\n      defer(\n        () =>\n          element.setSelectionRange(\n            selectionPosition,\n            selectionPosition,\n            'none',\n          ),\n        0,\n      );\n    } else {\n      element.setSelectionRange(selectionPosition, selectionPosition, 'none');\n    }\n  }\n}\n\nfunction getSafeRawValue(inputValue: any): any {\n  if (isString(inputValue)) {\n    return inputValue;\n  } else if (isNumber(inputValue)) {\n    return String(inputValue);\n  } else if (inputValue === undefined || inputValue === null) {\n    return emptyString;\n  } else {\n    throw new Error(\n      \"The 'value' provided to Text Mask needs to be a string or a number. The value \" +\n        `received was:\\n\\n ${JSON.stringify(inputValue)}`,\n    );\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgModule,\n  OnChanges,\n  Optional,\n  Provider,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  COMPOSITION_BUFFER_MODE,\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { ɵgetDOM as getDOM } from '@angular/platform-browser';\nimport { createTextMaskInputElement } from './mask/create-text-mask-input-element.function';\n\nexport class TextMaskConfig {\n  mask:\n    | Array<string | RegExp>\n    | ((raw: string) => Array<string | RegExp>)\n    | false;\n  guide?: boolean;\n  placeholderChar?: string;\n  pipe?: (\n    conformedValue: string,\n    config: TextMaskConfig,\n  ) => false | string | object;\n  keepCharPositions?: boolean;\n  showMask?: boolean;\n}\n\nexport const MASKEDINPUT_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MaskedInputDirective),\n  multi: true,\n};\n\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid(): boolean {\n  const userAgent = getDOM() ? getDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n\n@Directive({\n  host: {\n    '(input)': '_handleInput($event.target.value)',\n    '(blur)': 'onTouched()',\n    '(compositionstart)': '_compositionStart()',\n    '(compositionend)': '_compositionEnd($event.target.value)',\n  },\n  selector: '[textMask]',\n  exportAs: 'textMask',\n  providers: [MASKEDINPUT_VALUE_ACCESSOR],\n})\nexport class MaskedInputDirective implements ControlValueAccessor, OnChanges {\n  @Input('textMask') textMaskConfig: TextMaskConfig = {\n    mask: [],\n    guide: true,\n    placeholderChar: '_',\n    pipe: undefined,\n    keepCharPositions: false,\n  };\n\n  private textMaskInputElement: any;\n  private inputElement: HTMLInputElement;\n\n  /** Whether the user is creating a composition string (IME events). */\n  private _composing: boolean = false;\n\n  constructor(\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    @Optional()\n    @Inject(COMPOSITION_BUFFER_MODE)\n    private _compositionMode: boolean,\n  ) {\n    if (this._compositionMode == null) {\n      this._compositionMode = !_isAndroid();\n    }\n  }\n\n  onChange = (_: any) => {\n    // noop\n  };\n  onTouched = () => {\n    // noop\n  };\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._setupMask(true);\n    if (this.textMaskInputElement !== undefined) {\n      this.textMaskInputElement.update(this.inputElement.value);\n    }\n  }\n\n  writeValue(value: any): void {\n    this._setupMask();\n\n    // set the initial value for cases where the mask is disabled\n    const normalizedValue = value == null ? '' : value;\n    this._renderer.setProperty(this.inputElement, 'value', normalizedValue);\n\n    if (this.textMaskInputElement !== undefined) {\n      this.textMaskInputElement.update(value);\n    }\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(\n      this._elementRef.nativeElement,\n      'disabled',\n      isDisabled,\n    );\n  }\n\n  _handleInput(value: any): void {\n    if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n      this._setupMask();\n\n      if (this.textMaskInputElement !== undefined) {\n        this.textMaskInputElement.update(value);\n\n        // get the updated value\n        value = this.inputElement.value;\n        this.onChange(value);\n      }\n    }\n  }\n\n  _setupMask(create: boolean = false): void {\n    if (!this.inputElement) {\n      if (this._elementRef.nativeElement.tagName.toUpperCase() === 'INPUT') {\n        // `textMask` directive is used directly on an input element\n        this.inputElement = this._elementRef.nativeElement;\n      } else {\n        // `textMask` directive is used on an abstracted input element, `md-input-container`, etc\n        this.inputElement = this._elementRef.nativeElement.getElementsByTagName(\n          'INPUT',\n        )[0];\n      }\n    }\n\n    if (this.inputElement && create) {\n      this.textMaskInputElement = createTextMaskInputElement(\n        Object.assign({ inputElement: this.inputElement }, this.textMaskConfig),\n      );\n    }\n  }\n\n  _compositionStart(): void {\n    this._composing = true;\n  }\n\n  _compositionEnd(value: any): void {\n    this._composing = false;\n    if (this._compositionMode) {\n      this._handleInput(value);\n    }\n  }\n}\n\n@NgModule({\n  declarations: [MaskedInputDirective],\n  exports: [MaskedInputDirective],\n})\nexport class TextMaskModule {}\n","export const clean = (number: string) => {\n  return number.toString().replace(/[^\\d\\^\\+]/gm, '');\n};\n\nexport const mask = (maxLength: number = 13) => (rawValue: string) => {\n  // if (clean(rawValue).length <= 12 || maxLength === 12) {\n  // \treturn ['+', /[1-9]/, ' ', '(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/];\n  // }\n\n  return [\n    '(',\n    /[1-9]/,\n    /\\d/,\n    /\\d/,\n    ')',\n    ' ',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    '-',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n  ];\n};\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  COMPOSITION_BUFFER_MODE,\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { createTextMaskInputElement } from '../mask/create-text-mask-input-element.function';\nimport { clean, mask } from './utils';\n\nexport class TextMaskConfig {\n  public mask:\n    | Array<string | RegExp>\n    | ((raw: string) => Array<string | RegExp>)\n    | false;\n  public guide?: boolean;\n  public placeholderChar?: string;\n  public pipe?: (\n    conformedValue: string,\n    config: TextMaskConfig,\n  ) => false | string | object;\n  public keepCharPositions?: boolean;\n  public showMask?: boolean;\n}\n\n// @dynamic\n@Directive({\n  exportAs: 'cntMaskPhone',\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PhoneMaskDirective),\n    },\n  ],\n  selector: '[cntMaskPhone]',\n})\nexport class PhoneMaskDirective\n  implements ControlValueAccessor, OnChanges, OnInit {\n  @Input() public clean: boolean = true;\n  @Input() public maxNumberLength: number = 13;\n\n  public textMaskConfig: TextMaskConfig;\n\n  private textMaskInputElement: any;\n  private inputElement: HTMLInputElement;\n\n  /** Whether the user is creating a composition string (IME events). */\n  private composing: boolean = false;\n\n  constructor(\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    @Inject(PLATFORM_ID) private platformId: object,\n    @Optional()\n    @Inject(COMPOSITION_BUFFER_MODE)\n    private compositionMode: boolean,\n  ) {\n    if (this.compositionMode == null) {\n      this.compositionMode = !this.isAndroid();\n    }\n  }\n\n  public onChange = (_: any) => {\n    // implement\n  };\n\n  public onTouched = () => {\n    // implement\n  };\n\n  ngOnInit(): void {\n    this.setupMask(true);\n    if (this.textMaskInputElement !== undefined) {\n      this.textMaskInputElement.update(this.inputElement.value);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.setupMask(true);\n    if (this.textMaskInputElement !== undefined) {\n      this.textMaskInputElement.update(this.inputElement.value);\n    }\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  writeValue(value: any): void {\n    this.setupMask();\n\n    // set the initial value for cases where the mask is disabled\n    const normalizedValue = value == null ? '' : value;\n    this.renderer.setProperty(this.inputElement, 'value', normalizedValue);\n\n    if (this.textMaskInputElement !== undefined) {\n      this.textMaskInputElement.update(value);\n    }\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.renderer.setProperty(\n      this.elementRef.nativeElement,\n      'disabled',\n      isDisabled,\n    );\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  handleInput(value: string): void {\n    if (!this.compositionMode || (this.compositionMode && !this.composing)) {\n      this.setupMask();\n\n      if (this.textMaskInputElement !== undefined) {\n        this.textMaskInputElement.update(value);\n\n        // get the updated value\n        value = this.inputElement.value;\n\n        if (this.clean) {\n          this.onChange(clean(value));\n        } else {\n          this.onChange(value);\n        }\n      }\n    }\n  }\n\n  setupMask(create: boolean = false): void {\n    this.textMaskConfig = {\n      mask: mask(this.maxNumberLength),\n      guide: false,\n      placeholderChar: '_',\n      pipe: undefined,\n      keepCharPositions: false,\n    };\n    if (!this.inputElement) {\n      if (this.elementRef.nativeElement.tagName.toUpperCase() === 'INPUT') {\n        // `textMask` directive is used directly on an input element\n        this.inputElement = this.elementRef.nativeElement;\n      } else {\n        // `textMask` directive is used on an abstracted input element, `md-input-container`, etc\n        this.inputElement = this.elementRef.nativeElement.getElementsByTagName(\n          'INPUT',\n        )[0];\n      }\n    }\n\n    if (this.inputElement && create) {\n      this.textMaskInputElement = createTextMaskInputElement(\n        Object.assign({ inputElement: this.inputElement }, this.textMaskConfig),\n      );\n    }\n  }\n\n  @HostListener('compositionstart')\n  compositionStart(): void {\n    this.composing = true;\n  }\n\n  @HostListener('compositionend', ['$event.target.value'])\n  compositionEnd(value: any): void {\n    this.composing = false;\n    // tslint:disable-next-line: no-unused-expression\n    this.compositionMode && this.handleInput(value);\n  }\n\n  /**\n   * We must check whether the agent is Android because composition events\n   * behave differently between iOS and Android.\n   */\n  private isAndroid(): boolean {\n    if (\n      isPlatformBrowser(this.platformId) &&\n      window &&\n      (window as any).navigator\n    ) {\n      const userAgent = window.navigator.userAgent;\n      return /android (\\d+)/.test(userAgent.toLowerCase());\n    }\n\n    return false;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { conformToMask } from '../mask/conform-to-mask.function';\nimport { mask } from './utils';\n\n@Pipe({\n  name: 'cntMaskPhone',\n})\nexport class PhoneMaskPipe implements PipeTransform {\n  transform(value: string): string {\n    if (!value) {\n      return '';\n    }\n\n    return conformToMask(value, mask(), { guide: false }).conformedValue;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TextMaskModule } from './angular-2-text-mask.module';\nimport { CardExpirationPipe } from './cc/card-expiration.pipe';\nimport { CCCvcFormatDirective } from './cc/directives/cc-cvc-format.directive';\nimport { CCExpiryFormatDirective } from './cc/directives/cc-expiry-format.directive';\nimport { CCNumberFormatDirective } from './cc/directives/cc-number-format.directive';\nimport { PhoneMaskDirective } from './phone/phone-mask.directive';\nimport { PhoneMaskPipe } from './phone/phone-mask.pipe';\n\n@NgModule({\n  imports: [TextMaskModule],\n  declarations: [\n    CCNumberFormatDirective,\n    CCExpiryFormatDirective,\n    CCCvcFormatDirective,\n    CardExpirationPipe,\n    PhoneMaskDirective,\n    PhoneMaskPipe,\n  ],\n  exports: [\n    CCNumberFormatDirective,\n    CCExpiryFormatDirective,\n    CCCvcFormatDirective,\n    CardExpirationPipe,\n    PhoneMaskDirective,\n    PhoneMaskPipe,\n  ],\n  providers: [CardExpirationPipe, PhoneMaskPipe],\n})\nexport class CntMasksModule {}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// @dynamic\n@Directive({\n  exportAs: 'cntMaskPhone',\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PhoneMaskDirectiveMock),\n    },\n  ],\n  selector: '[cntMaskPhone]',\n})\nexport class PhoneMaskDirectiveMock {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cntMaskPhone',\n})\nexport class PhoneMaskPipeMock implements PipeTransform {\n  transform(value: string): string {\n    return value;\n  }\n}\n","/*\n * Public API Surface of cnt-masks\n */\n\nexport * from './lib/cc/card-expiration.pipe';\nexport * from './lib/cc/card-expiration.pipe.mock';\nexport * from './lib/cc/directives/cc-cvc-format.directive';\nexport * from './lib/cc/directives/cc-cvc-format.directive.mock';\nexport * from './lib/cc/directives/cc-expiry-format.directive';\nexport * from './lib/cc/directives/cc-expiry-format.directive.mock';\nexport * from './lib/cc/directives/cc-number-format.directive';\nexport * from './lib/cc/directives/cc-number-format.directive.mock';\nexport * from './lib/cc/validators/credit-card.validator';\nexport * from './lib/cnt-masks.module';\nexport * from './lib/phone/phone-mask.directive';\nexport * from './lib/phone/phone-mask.directive.mock';\nexport * from './lib/phone/phone-mask.pipe';\nexport * from './lib/phone/phone-mask.pipe.mock';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MASKEDINPUT_VALUE_ACCESSOR as ɵa,MaskedInputDirective as ɵb,TextMaskModule as ɵc} from './lib/angular-2-text-mask.module';"],"names":["Pipe","Directive","ElementRef","Renderer2","HostListener","emptyString","emptyArray","convertMaskToPlaceholder","NG_VALUE_ACCESSOR","forwardRef","getDOM","Optional","Inject","COMPOSITION_BUFFER_MODE","Input","NgModule","isPlatformBrowser","PLATFORM_ID"],"mappings":"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"}